version: '3.7'
services:
  nginx:
    image: nginx:1.20-alpine
    ports:
      - 5280:5280
    volumes:
      # -  /Users/superbear/dockerVolume/nginx/:/etc/nginx/conf.d/:ro
      - ./build/nginx/:/etc/nginx/conf.d/:ro
    links:
      - account:account
  flake:
    build: 
      context: ./
      dockerfile: Dockerfile.flake
    ports:
      - 5181:5181 # prometheus & pprof
  account:
    build: 
      context: ./
      dockerfile: Dockerfile.account
    ports:
      - 5281:5281 # prometheus & pprof
    environment:
      - MYSQL_ADDR=${MYSQL_ADDR}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - FlAKE_ADDR=${FlAKE_ADDR}
      - AGE_ADDR=${AGE_ADDR}
      - EMAIL_ADDR=${EMAIL_ADDR}
      - BANK_ADDR=${BANK_ADDR}
      - CELLPHONE_ADDR=${CELLPHONE_ADDR}
    links:
      - mysql:mysql
      - flake:flake
      - age:age
      - email:email
      - bank:bank
      - cellphone:cellphone
  age:
    build: 
      context: ./
      dockerfile: Dockerfile.age
    ports:
      - 5381:5381 # prometheus & pprof
    environment:
      - MYSQL_ADDR=${MYSQL_ADDR}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - FlAKE_ADDR=${FlAKE_ADDR}
    links:
      # - mysql:mysql
      - flake:flake
  email:
    build:  
      context: ./
      dockerfile: Dockerfile.email
    ports:
      - 5481:5481  # prometheus & pprof
    environment:
      - MYSQL_ADDR=${MYSQL_ADDR}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - FlAKE_ADDR=${FlAKE_ADDR}
    links:
      - mysql:mysql
      - flake:flake
  bank:
    build: 
      context: ./
      dockerfile: Dockerfile.bank
    ports:
      - 5581:5581  # prometheus & pprof
    environment:
      - MYSQL_ADDR=${MYSQL_ADDR}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - FlAKE_ADDR=${FlAKE_ADDR}
    links:
      - mysql:mysql
      - flake:flake
  cellphone:
    build: 
      context: ./
      dockerfile: Dockerfile.cellphone
    ports:
      - 5681:5681  # prometheus & pprof
    environment:
      - MYSQL_ADDR=${MYSQL_ADDR}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - FlAKE_ADDR=${FlAKE_ADDR}
    links:
      - mysql:mysql
      - flake:flake
  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=@Cai3564423
    volumes:
      # - /Users/superbear/dockerVolume/mysql/init:/docker-entrypoint-initdb.d:ro
      - ./build/init:/docker-entrypoint-initdb.d:ro
    ports:
      - 3306:3306
    security_opt:
      - seccomp:unconfined
  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      # - /Users/superbear/dockerVolume/prometheus/:/etc/prometheus/
      - ./build/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.0
    depends_on:
      - elasticsearch
    ports:
      - 9201:5601
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
  logstash:
    image: docker.elastic.co/logstash/logstash:7.12.0
    volumes:
      # - /Users/superbear/dockerVolume/logstash/pipeline:/usr/share/logstash/pipeline
      - ./build/logstash/:/usr/share/logstash/pipeline
    ports:
      - 5044:5044
      - 9600:9600
    depends_on:
      - elasticsearch
  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - "2181:2181"
  # kafka:
  #   # build: 
  #   #   context: ./
  #   #   dockerfile: Dockerfile.kafka
  #   image: wurstmeister/kafka
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: "zebra-log:3:1,zebra-mysql-binlog:3:1"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  # kafka-ui:
  #   image: obsidiandynamics/kafdrop
  #   restart: "no"
  #   ports:
  #     - "9000:9000"
  #   environment:
  #     KAFKA_BROKERCONNECT: kafka:9092
  #     JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
  #   depends_on:
  #     - kafka

networks:
  zebra:
